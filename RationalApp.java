/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
 
import javax.swing.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author tgese
 */
public class RationalApp extends JFrame {
    
    private JTextField wholeNumber1;
    private JTextField numerator1;
    private JTextField denominator1;
    
    private JTextField wholeNumber2; 
    private JTextField numerator2;
    private JTextField denominator2;
    
    private JLabel operatorLabel;
    private ButtonGroup operatorButtons;    
    private JButton addButton;
    private JButton subtractButton;
    private JButton multiplyButton;
    private JButton divideButton;
    private JButton calculateButton;
    
    private JLabel resultNumerator;
    private JLabel resultDenominator;
    
    private JSeparator jSeparator1;
    private JSeparator jSeparator2;
    private JSeparator jSeparator3;

    private String operatorSelected;
    /**
     * Creates new form RationalApp
     */
    public RationalApp() {
        operatorSelected = "none";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        wholeNumber1 = new JTextField();
        numerator1 = new JTextField();
        denominator1 = new JTextField();
        
        wholeNumber2 = new JTextField();
        numerator2 = new JTextField();
        denominator2 = new JTextField();
        
        operatorLabel = new JLabel();
        
        operatorButtons = new ButtonGroup();
        addButton = new JButton();
        subtractButton = new JButton();
        multiplyButton = new JButton();
        divideButton = new JButton();
        
        calculateButton = new JButton();
        
        resultNumerator = new JLabel();
        resultDenominator = new JLabel();
        
        jSeparator1 = new JSeparator();
        jSeparator2 = new JSeparator();
        jSeparator3 = new JSeparator();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        wholeNumber1.setColumns(2);
        numerator1.setColumns(2);
        denominator1.setColumns(2);

        wholeNumber2.setColumns(2);
        numerator2.setColumns(2);
        denominator2.setColumns(2);

        addButton.setText("+");
        operatorButtons.add(addButton);
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        subtractButton.setText("-");
        operatorButtons.add(subtractButton);
        subtractButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                subtractButtonActionPerformed(evt);
            }
        });

        multiplyButton.setText("x");
        operatorButtons.add(multiplyButton);
        multiplyButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                multiplyButtonActionPerformed(evt);
            }
        });

        divideButton.setText("/");
        operatorButtons.add(divideButton);
        divideButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                divideButtonActionPerformed(evt);
            }
        });

        resultNumerator.setText("  ");
        resultDenominator.setText("  ");

        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        //THE FOLLOWING CODE WAS GENERATED BY THE NETBEANS IDE.  IT PLACES AND ARRANGES THE COMPONENTS
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(wholeNumber1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(denominator1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                            .addComponent(numerator1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(subtractButton)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(multiplyButton)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(divideButton)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(operatorLabel)
                            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(wholeNumber2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(denominator2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addComponent(numerator2, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(resultNumerator)))
                .addGap(36, 36, 36))
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(calculateButton)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultDenominator)
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(numerator2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(numerator1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(denominator1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(denominator2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(62, 62, 62))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(wholeNumber1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(operatorLabel)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(wholeNumber2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(resultNumerator, GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(addButton)
                        .addComponent(subtractButton)
                        .addComponent(multiplyButton)
                        .addComponent(divideButton)))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(calculateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultDenominator)))
                .addGap(51, 51, 51))
        );
        //THE ABOVE CODE WAS GENERATED BY THE NETBEANS IDE.  IT PLACES AND ARRANGES THE COMPONENTS
        pack();
    }// </editor-fold>                                                                   

    private void addButtonActionPerformed(ActionEvent evt) {                                          
        operatorSelected = "+";
        operatorLabel.setText(operatorSelected);
    }                                         

    private void subtractButtonActionPerformed(ActionEvent evt) {                                               
        operatorSelected = "-";
        operatorLabel.setText(operatorSelected);
    }                                              

    private void multiplyButtonActionPerformed(ActionEvent evt) {                                               
        operatorSelected = "x";
        operatorLabel.setText(operatorSelected);
    }                                              

    private void divideButtonActionPerformed(ActionEvent evt) {                                             
        operatorSelected = "/";
        operatorLabel.setText(operatorSelected);
    }                                            

    private void calculateButtonActionPerformed(ActionEvent evt) {                                                
        int wholeNumber1Value, numerator1Value, denominator1Value;
        int wholeNumber2Value, numerator2Value, denominator2Value;
        
        try{
            wholeNumber1Value = Integer.parseInt(wholeNumber1.getText());
        }catch(NumberFormatException e){
            wholeNumber1Value = 0;
        }
        try{
            numerator1Value   = Integer.parseInt(numerator1.getText());
        }catch(NumberFormatException e){
            numerator1Value = 0;
        }
        try{
            denominator1Value = Integer.parseInt(denominator1.getText());
        }catch(NumberFormatException e){
            denominator1Value = 0;
        }
        try{
            wholeNumber2Value = Integer.parseInt(wholeNumber2.getText());
        }catch(NumberFormatException e){
            wholeNumber2Value = 0;
        }
        try{
            numerator2Value   = Integer.parseInt(numerator2.getText());
        }catch(NumberFormatException e){
            numerator2Value = 0;
        }
        try{
            denominator2Value = Integer.parseInt(denominator2.getText());
        }catch(NumberFormatException e){
            denominator2Value = 0;
        }
        
        try{
            Rational rational1 = new Rational(wholeNumber1Value,numerator1Value,denominator1Value);
            Rational rational2 = new Rational(wholeNumber2Value,numerator2Value,denominator2Value);
            
            Rational result;
            if (operatorSelected.equals("+"))
                result = rational1.add(rational2);
            else if (operatorSelected.equals("-"))
                result = rational1.subtract(rational2);
            else if (operatorSelected.equals("x"))
                result = rational1.multiply(rational2);
            else if (operatorSelected.equals("/"))
                result = rational1.divide(rational2);
            else 
                result = new Rational(0);
            
            resultNumerator.setText(result.getNumerator() + "");
            resultDenominator.setText(result.getDenominator() + "");
        }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this,e.getMessage(),"ERROR",JOptionPane.WARNING_MESSAGE);
        }
    }                                                                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RationalApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RationalApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RationalApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RationalApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RationalApp().setVisible(true);
            }
        });
    }                
}
